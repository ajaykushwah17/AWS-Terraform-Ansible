# Initialize AWS provider
provider "aws" {
  region = "us-east-1" # Change to your desired AWS region
}

# Create a random pet for naming
resource "random_pet" "sg" {}

# Generate a new SSH key pair
data "tls_private_key" "example" {
  algorithm = "RSA"
  rsa_bits  = 2048
}

# Extract the public key from the private key
data "tls_public_key" "example" {
  private_key_pem = data.tls_private_key.example.private_key_pem
}

# Create a security group with SSH and custom port (e.g., 8080) rules
resource "aws_security_group" "awsec2demo" {
  name        = "${random_pet.sg.id}-sg"
  description = "Security group with SSH and custom port"
  vpc_id      = aws_vpc.awsec2demo.id

  # Ingress rule for SSH (port 22)
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  # Ingress rule for your custom port (e.g., 8080)
  ingress {
    from_port   = 8080
    to_port     = 8080
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Create an AWS EC2 instance
resource "aws_instance" "awsec2demo" {
  ami           = "ami-0dbc3d7bc646e8516" # Replace with your desired AMI
  instance_type = "t2.micro"
  key_name      = "example" # Use the key pair generated by Terraform

  tags = {
    Name = "MyEC2Instance" # Specify the desired name for your EC2 instance
  }

  network_interface {
    network_interface_id = aws_network_interface.awsec2demo.id
    device_index        = 0
  }
}

output "ec2_instance_id" {
  value = aws_instance.awsec2demo.id
  description = "ID of the created EC2 instance"
}

output "public_key" {
  value = data.tls_public_key.example.public_key_pem
  description = "Generated public SSH key"
}
